// autogenerated using
// jq '.. | .operationId?' openapi/cos.json  | grep -v null

module.exports = {
  operationId: async (c, req, res) => {
    res.status(200).json({});
  },

  getVersionMetadata: async (c, req, res) => {
    res.status(200).json({});
  },
  getConnectorTypeByID: async (c, req, res) => {
    res.status(200).json({});
  },
  getConnectorTypes: async (c, req, res) => {
    res.status(200).json({});
  },
  createConnector: async (c, req, res) => {
    res.status(200).json({});
  },
  listConnectors: async (c, req, res) => {
    res.status(200).json({});
  },
  getConnector: async (c, req, res) => {
    res.status(200).json({});
  },
  deleteConnector: async (c, req, res) => {
    res.status(200).json({});
  },
  patchConnector: async (c, req, res) => {
    res.status(200).json({});
  },
  createConnectorCluster: async (c, req, res) => {
    res.status(200).json({});
  },
  listConnectorClusters: async (c, req, res) => {
    res.status(200).json({});
  },
  getConnectorCluster: async (c, req, res) => {
    res.status(200).json({});
  },
  updateConnectorClusterById: async (c, req, res) => {
    res.status(200).json({});
  },
  deleteConnectorCluster: async (c, req, res) => {
    res.status(200).json({});
  },
  getConnectorClusterAddonParameters: async (c, req, res) => {
    res.status(200).json({});
  },

  // Handling auth
  notFound: async (c, req, res) => res.status(404).json({ err: "not found" }),
  unauthorizedHandler: async (c, req, res) =>
    res.status(401).json({ err: "unauthorized" }),
};
