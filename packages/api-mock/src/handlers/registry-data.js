// autogenerated using
// jq '.. | .operationId?' openapi/srs-data.json  | grep -v null

module.exports = {
  getContentById: async (c, req, res) => {
    res.status(200).json({
      openapi: "3.0.2",
      info: {
        title: "Empty API",
        version: "1.0.0",
        description: "An example API design using OpenAPI.",
      },
    });
  },  
  getLatestArtifact: async (c, req, res) => {
    res.status(200).json({
      openapi: "3.0.2",
      info: {
        title: "Empty API",
        version: "1.0.0",
        description: "An example API design using OpenAPI.",
      },
    });
  },
  listArtifactsInGroup: async (c, req, res) => {
    res.status(200).json({
      artifacts: [
        {
          groupId: "default",
          id: "mytopic.jsonschema",
          name: "mytopic.jsonschema",
          description: "Not provided",
          labels: ["current"],
          type: "JSON",
          state: "ENABLED",
          createdBy: "wtrocki",
          createdOn: "2019-03-22T12:51:19Z",
        },
      ],
      count: 1,
    });
  },
  createArtifact: async (c, req, res) => {
    res.status(200).json({
      groupId: "default",
      id: "mytopic.jsonschema",
      name: "mytopic.jsonschema",
      description: "Not provided",
      type: "JSON",
      version: "1",
      createdBy: "wtrocki",
      createdOn: "2019-03-22T12:51:19Z",
      modifiedBy: "wtrocki",
      modifiedOn: "2019-07-19T15:09:00Z",
      globalId: 12984719247,
      contentId: 82736,
      labels: ["current"],
      properties: {
        "creator": "rhoas-cli",
      },
    });
  },
  deleteArtifact: async (c, req, res) => {
    res.status(204).json();
  },

  // Handling auth
  notFound: async (c, req, res) => res.status(404).json({ err: "not found" }),
  unauthorizedHandler: async (c, req, res) =>
    res.status(401).json({ err: "unauthorized" }),
};
